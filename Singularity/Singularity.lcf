object SyntAnal34: TLibSyntAnalyzer
  Formats = <
    item
      DisplayName = 'Comment'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clGray
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsItalic]
    end
    item
      DisplayName = 'Id.Header'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clMaroon
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
      FormatFlags = [ffItalic, ffUnderline, ffStrikeOut, ffReadOnly, ffHidden, ffFontName, ffFontSize, ffFontCharset, ffVertAlign]
    end
    item
      DisplayName = 'Id.Section'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clBlue
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end>
  TokenRules = <
    item
      DisplayName = 'Comment'
      StyleName = 'Comment'
      Expression = '\#.*'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Id.Header'
      StyleName = 'Id.Header'
      TokenType = 1
      Expression = '^[\x20\x09]*\w+[^:]'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Id.Section'
      TokenType = 2
      Expression = '^%[a-z_]\w*'
      ColumnFrom = 0
      ColumnTo = 0
    end>
  BlockRules = <
    item
      DisplayName = 'Id.Header'
      StyleName = 'Id.Header'
      BlockType = btTagDetect
      ConditionList = <
        item
          TagList.Strings = (
            'Bootstrap'
            'From'
            'Include'
            'Library'
            'MirrorURL'
            'OSVersion'
            'Stage')
          TokenTypes = 2
        end>
      NameFmt = '%s0'
      HighlightPos = cpAny
      TreeItemImage = 2
      IgnoreAsParent = False
    end
    item
      DisplayName = 'Id.Section'
      StyleName = 'Id.Section'
      BlockType = btTagDetect
      ConditionList = <
        item
          TagList.Strings = (
            '%environment'
            '%files'
            '%help'
            '%labels'
            '%post'
            '%runscript'
            '%setup'
            '%startscript'
            '%test')
          TokenTypes = 4
        end>
      HighlightPos = cpAny
      IgnoreAsParent = False
    end
    item
      DisplayName = 'Section'
      ConditionList = <
        item
          TokenTypes = 4
        end>
      HighlightPos = cpAny
      SelfClose = True
      IgnoreAsParent = False
    end>
  CodeTemplates = <>
  SubAnalyzers = <
    item
      DisplayName = 'Bash'
      BlockName = 'Section'
      StartExpression = '.*'
      EndExpression = 
        '^%(files|labels|help|environment|post|runscript|setup|startscrip' +
        't|test)'
      SyntAnalyzer = SyntAnal4
    end>
  SampleText.Strings = (
    '# SYNTAX TEST "Singularity.sublime-syntax"'
    'Bootstrap: library'
    '# <- source.singularity'
    '    # <- keyword.control'
    'From: ubuntu:18.04'
    'Stage: build'
    ''
    '%setup'
    '# <- source.singularity keyword.control.singularity.section'
    '    touch /file1'
    '    # <- source.shell.bash'
    '    touch ${SINGULARITY_ROOTFS}/file2'
    '%files'
    '    /file1'
    '    /file1 /opt'
    ''
    '%environment'
    '    export LISTEN_PORT=12345'
    '    export LC_ALL=C'
    ''
    '%post'
    '    apt-get update && apt-get install -y netcat'
    '    NOW=`date`'
    '    echo "export NOW=\"${NOW}\"" >> $SINGULARITY_ENVIRONMENT'
    ''
    '%runscript'
    '    echo "Container was created $NOW"'
    '    echo "Arguments received: $*"'
    '    exec echo "$@"'
    ''
    '%startscript'
    '    nc -lp $LISTEN_PORT'
    ''
    '%test'
    '    # This is a comment'
    '    grep -q NAME=\"Ubuntu\" /etc/os-release'
    '    if [ $? -eq 0 ]; then'
    '        echo "Container base is Ubuntu as expected."'
    '    else'
    '        echo "Container base is not Ubuntu."'
    '    fi'
    ''
    '%labels'
    '    Author d@sylabs.io'
    '    Version v0.0.1'
    ''
    '%help      '
    
      '    This is a demo container used to illustrate a def file that ' +
      'uses all'
    '    supported sections.')
  TokenTypeNames.Strings = (
    'Comment'
    'Id.Header'
    'Id.Section')
  Extentions = 'Singularity'
  LexerName = 'Singularity'
  Notes.Strings = (
    'By Oleh Lutsak, https://github.com/OlehL')
  ParseEndOfLine = True
  LineComment = '#'
  Charset = DEFAULT_CHARSET
end
